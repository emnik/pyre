<!DOCTYPE html>
<html>
	<head>
		<link rel="stylesheet" type="text/css" href="/select2/css/select2.css">
		<link rel="stylesheet" type="text/css" href="/stylesheets/select2-width-fix.css">
		<% include ../partials/head %>
	</head>

<body>
	<header>
		<% include ../partials/header_edits %>
	</header>

	<div class="container-fluid">
		<div class="row">
			<div class="col-xs-12 col-md-6 col-lg-6">
				<div class="panel panel-default">
					<div class="panel-heading">
						<h5>Set DAY target temp and sensors</h5>
					</div>
					<div class="panel-body">
						<div class="input-group">
							<input id="setDayTargetTemp" type="text" value=<%=dayTemp.temp%> name="setDayTargetTemp" readonly>
						</div>
						<div style="padding-top:15px;">
							<select id="daysensors" class="form-control" style="width:100%;" name="daysensors" multiple="multiple">
							<optgroup label="Sensor location:">
								<% sensors.forEach(function(item){ %>
								  <option value="<%=item.id%>"
								  <%var arr = dayTemp.sensor_ids.split(',');
								  for (var i=0; i<arr.length; i++){
								  	if (item.id==arr[i]) {%> selected="selected" <%}
								  }%>><%= item.location %>
								  </option>
								 <%});%>
							 </select>
						</div>
					</div>
				</div>
			</div>

			<div class="col-xs-12 col-md-6 col-lg-6">
				<div class="panel panel-default">
					<div class="panel-heading">
						<h5>Set NIGHT target temp and sensors</h5>
					</div>
					<div class="panel-body">
						<div class="input-group">
							<input id="setNightTargetTemp" type="text" value=<%=nightTemp.temp%> name="setNightTargetTemp" readonly>
						</div>
						<div style="padding-top:15px;">
							<select id="nightsensors" class="form-control" style="width:100%;" name="nightsensors" multiple="multiple">
								<optgroup label="Sensor location:">
								<% sensors.forEach(function(item){ %>
								  <option value="<%=item.id%>"
								  <%var arr = nightTemp.sensor_ids.split(',');
								  for (var i=0; i<arr.length; i++){
								  	if (item.id==arr[i]) {%> selected="selected" <%}
								  }%>><%= item.location %>
								  </option>
								 <%});%>
							 </select>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="row" style="padding-bottom:20px;">
			<div class="col-xs-12 col-md-12 col-lg-12">
				<div class="btn-group pull-left">
					<button id="setbtn" type="button" class="btn btn-primary pull-left">Set active</button>
					<!-- <button id="resetbtn" type="button" class="btn btn-danger pull-left">Reset</button> -->
					<!-- <button id="refreshbtn" type="button" class="btn btn-danger" onclick="location.reload(true);"><span class="glyphicon glyphicon-refresh"></span></button> -->
				</div>
				<button id="savebtn" type="button" class="btn btn-success pull-right">Save</button>
			</div>
		</div>
	</div>

</body>

<% include ../partials/javascript.ejs %>
<script src="/bootstrap-touchspin/jquery.bootstrap-touchspin.js"></script>
<script src="/select2/js/select2.min.js"></script>
<script src="/javascripts/custom.js"></script>

<script>

	$( document ).ready(function() {

		// $('#resetbtn').prop('disabled', true);
		$('#savebtn').prop('disabled', true);

		// $('#resetbtn').click(function(){
		// 	// the dayTemp.sensor_ids variable contains a string with value either 1 or 2 or 1,2.
		// 	// Summarizing: using the .split() function on the day/nightTemp.sensor_ids variable helps me to
		// 	// send data to POST <as array> and update the select2 input value (which also needs an array!!!
		// 	var curDayValue = $("input[name='setDayTargetTemp']").val(); //numeric
		// 	var curNightValue = $("input[name='setNightTargetTemp']").val(); //numeric
		// 	var curDaySensorIds = $("#daysensors").val(); //array
		// 	var curNightSensorIds = $("#nightsensors").val(); //array
		// 	var prevDaySensorArr='<%=dayTemp.sensor_ids%>'.split(','); //string -> array
		// 	var prevNightSensorArr='<%=nightTemp.sensor_ids%>'.split(','); //string ->array
		//
		// 	$("input[name='setDayTargetTemp']").val(<%=dayTemp.temp%>);
		// 	$("input[name='setNightTargetTemp']").val(<%=nightTemp.temp%>);
		//
		// 	//programmatically set one ore more values to the select2 input:
		// 	$("#daysensors").val(prevDaySensorArr).trigger("change");
		// 	$("#nightsensors").val(prevNightSensorArr).trigger("change");
		//
		//
		// 	if (curDaySensorIds!=null && (curDayValue!=<%=dayTemp.temp%> || !(curDaySensorIds.compare(prevDaySensorArr)))){
		// 		setTemp(<%=dayTemp.temp%>, '<%=dayTemp.name%>', prevDaySensorArr, 'reset');
		// 	}
		// 	else
		// 	{
		// 		console.log("No need for action...");
		// 	}
		// 	if (curNightSensorIds!=null && (curNightValue!=<%=nightTemp.temp%> || !(curNightSensorIds.compare(prevNightSensorArr)))){
		// 		setTemp(<%=nightTemp.temp%>,'<%=nightTemp.name%>', prevNightSensorArr, 'reset');
		// 	}
		// 	else
		// 	{
		// 		console.log("No need for action...");
		// 	}
		//
		// })

		$('#savebtn').click(function(){
			var newDaytemp = $("input[name='setDayTargetTemp']").val();
			var newDaySensorIds = $("#daysensors").val();
			setTemp(newDaytemp, '<%=dayTemp.name%>', newDaySensorIds, 'set');

			var newNighttemp = $("input[name='setNightTargetTemp']").val();
			var newNightSensorIds = $("#nightsensors").val();
			setTemp(newNighttemp, '<%=nightTemp.name%>', newNightSensorIds, 'set');
		})

		$('#daysensors').select2({
			minimumResultsForSearch: Infinity,
			placeholder: "Select day sensors"
		});

		//disabling the keyboard showing up on mobile devices!
		$('#daysensors').on('select2:opening select2:closing', function( event ) {
    var $searchfield = $(this).parent().find('.select2-search__field');
    $searchfield.prop('disabled', true);
		});

		$('#nightsensors').select2({
			minimumResultsForSearch: Infinity,
			placeholder: "Select night sensors"
		});

		//disabling the keyboard showing up on mobile devices!
		$('#nightsensors').on('select2:opening select2:closing', function( event ) {
    var $searchfield = $(this).parent().find('.select2-search__field');
    $searchfield.prop('disabled', true);
		});

	}) //end of ( document ).ready(function()

	function setTemp(t, name, sensor_ids, action){
		if (sensor_ids!=null){
			$.ajax({
				type: "POST",
				contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
				url: "/edit/update_temp",
				data: JSON.stringify({newtemp:t, name:name, sensor_ids:sensor_ids}),
				/*JavaScript Object Notation is a way to share data between applications in object format.
				However, you cannot send an object over an HTTP request without first turning it into a string
				and sending it as a single variable. The functions JSON.parse() and JSON.stringify() do this for us.*/
				success: function(rdata) { //rdata = remote data that the server sends as feedback...
					// console.log(rdata.result);
					if (rdata.result==="ok"){
						console.log("success");
						if (action=='set'){
							$("#savebtn").empty();
							$("#savebtn").append('Save <span class="glyphicon glyphicon-ok"</span>');
							$("#savebtn").prop('disabled', true);
							// $("#resetbtn").removeProp('disabled');
						}
						if (action=='reset'){
							$("#savebtn").empty();
							$("#savebtn").append('Save');
							$("#savebtn").prop('disabled', true);
							// $("#resetbtn").prop('disabled', true);
						}

					}
					else
					{
						console.log('error');
						$("#savebtn").empty();
						$("#savebtn").append('Error <span class="glyphicon glyphicon-alert"</span>');
					}
				},
				dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
			});
		}
		else
		{
			console.log('You should at least choose one sensor!');
		}
	}

	$("input[name='setDayTargetTemp']").TouchSpin({
		min: 10, // Minimum value.
		max: 30, // Maximum value.
		decimals: 1,
		boostat: 10, // Boost at every nth step.
		maxboostedstep: 1, // Maximum step when boosted.
		postfix: '&deg C', // Text after the input.
		prefix: '<span class="glyphicon glyphicon-fire"></span>', // Text before the input.
		step: 0.1, // Incremental/decremental step on up/down change.
		stepinterval: 100, // Refresh rate of the spinner in milliseconds.
		stepintervaldelay: 500 // Time in milliseconds before the spinner starts to spin.
	});

	$("input[name='setNightTargetTemp']").TouchSpin({
		min: 10, // Minimum value.
		max: 30, // Maximum value.
		decimals: 1,
		boostat: 10, // Boost at every nth step.
		maxboostedstep: 1, // Maximum step when boosted.
		postfix: '&deg C', // Text after the input.
		prefix: '<span class="glyphicon glyphicon-fire"></span>', // Text before the input.
		step: 0.1, // Incremental/decremental step on up/down change.
		stepinterval: 100, // Refresh rate of the spinner in milliseconds.
		stepintervaldelay: 500 // Time in milliseconds before the spinner starts to spin.
	});

	$("input[name='setDayTargetTemp']").change(function(){
		$("#savebtn").empty();
		$("#savebtn").append('Save <span class="glyphicon glyphicon-transfer"</span>');
		$("#savebtn").removeProp('disabled');
	})

	$("input[name='setNightTargetTemp']").change(function(){
		$("#savebtn").empty();
		$("#savebtn").append('Save <span class="glyphicon glyphicon-transfer"</span>');
		$("#savebtn").removeProp('disabled');
	})

	$('#nightsensors').change(function(){
		$("#savebtn").empty();
		$("#savebtn").append('Save <span class="glyphicon glyphicon-transfer"</span>');
		$("#savebtn").removeProp('disabled');
	})

	$('#daysensors').change(function(){
		$("#savebtn").empty();
		$("#savebtn").append('Save <span class="glyphicon glyphicon-transfer"</span>');
		$("#savebtn").removeProp('disabled');
	})

	$('#setbtn').click(function(){
		setActiveProfile('2');
	});

	function backButton() {
	    var value = readCookie('backUrl');
	    eraseCookie('backUrl');
	    document.location.href = value;
	}

	function setActiveProfile(profile_id){
		$.ajax({
			type: "POST",
			contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
			url: "/edit/update_profile",
			data: JSON.stringify({selected_profile:profile_id}),
			/*JavaScript Object Notation is a way to share data between applications in object format.
			However, you cannot send an object over an HTTP request without first turning it into a string
			and sending it as a single variable. The functions JSON.parse() and JSON.stringify() do this for us.*/
			success: function(rdata) { //rdata = remote data that the server sends as feedback...
				// console.log(rdata.result);
				if (rdata.result==="ok"){
					console.log("success");
					document.location.href ='/therm';
				}
				else
				{
					console.log('error');
				}
			},
			dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
		});
	}

</script>
