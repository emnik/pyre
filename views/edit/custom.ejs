<!DOCTYPE html>
<html>
	<head>
		<link rel="stylesheet" type="text/css" href="/stylesheets/select2.css">
		<link rel="stylesheet" type="text/css" href="/stylesheets/select2-width-fix.css">
		<% include ../partials/head %>
	</head>

<body>
	<header>
		<% include ../partials/header_edits %>
	</header>

	<div class="container-fluid">
		<div class="row"> 
			<div class="col-xs-12">
				<div class="panel panel-default">
				  <!-- Default panel contents -->
				  <div class="panel-heading">
				  	<span id="everyday"> Every Day Schedule<span>
				  </div>
				  <div class="panel-body">
				    <p>
				    	<select id="timewindows" class="form-control" style="width:100%;" name="timewindows">
				    		<option></option>
							<optgroup label="Available time windows:">
				    		<% timewindow.forEach(function(item){ %>
							  <option value="<%=item.id%>">
							  	<%=item.name%> <!-- (<%=item.on_time%>-<%=item.off_time%>) : <%=item.temp%>&degC -->
							  </option>
							<%});%>
							</optgroup>
				    	</select>
				    </p>

				  <!-- List group -->
				  <ul id="windowlist" class="list-group">
				  <% timewindowsperday.forEach(function (window){%>
			  		<li id="windowlist-window<%=window.id%>" class="list-group-item">
			  			<h4 class="list-group-item-heading">
			  				<%=window.name%> : <small><%=window.on_time+"-"+window.off_time%></small>
			  			</h4>
			  			<span class="label-group">
			  			<%var arr=window.sensor_ids.split(',');
						arr.forEach(function(i){
							sensors.forEach(function(j){
								if(j.id == i){%>
									<span class="label label-default ">
									<%=j.location%>
									</span>	
								<%}
							})
						})%>
						</span>
						<span style="padding-left:10px;"><%=window.temp%> &degC</span>
						<a href='#' onclick="windowremove('#windowlist-window<%=window.id%>'); return false;" style="color:black;"><span style="margin-top:-15px;" class="pull-right glyphicon glyphicon-remove"></span></a>
			  		</li>
				  <%})%>
				  </ul>
				  </div>
				</div>
			</div>	
		</div>
		<div class="row" style="padding-bottom:20px;">
			<div class="col-xs-12">
				<div class="btn-group pull-left">
					<button id="resetbtn" type="button" class="btn btn-danger pull-left">Reset</button>
					<button id="refreshbtn" type="button" class="btn btn-danger" onclick="location.reload(true);"><span class="glyphicon glyphicon-refresh"></span></button>
				</div>
				<button id="setbtn" type="button" class="btn btn-success pull-right">Save</button>
			</div>
		</div>
	</div>

</body>

<% include ../partials/javascript.ejs %>

<script src="/javascripts/select2/select2.min.js"> </script>
<script src="/javascripts/custom.js"></script>

<script>
var lastsavedwindows=[];
var prevtimewindows=[];

	$(document).ready(function(){

		$("#resetbtn").prop('disabled', true);
		$("#setbtn").prop('disabled', true);

		prevtimewindows = get_current_timewindows();
		lastsavedwindows = get_current_timewindows();


		$('[name="timewindows"]').select2({
			minimumResultsForSearch: Infinity,
			placeholder: "Select a time window to add"
		});


		$('[name="timewindows"]').on('change', function(){
			var timewindows_id = this.value;
			// console.log($(this));
			var listgroup = $(this).parent().next();
			$.ajax({
				type: "POST",
				contentType: "application/json; charset=utf-8", 
				url: "/edit/get_timewindow_by_id",
				data: JSON.stringify({id:timewindows_id}),
				success: function(rdata) { //rdata = remote data that the server sends as feedback...
					// console.log(rdata.result);
					if (rdata.result==="ok"){
						console.log("success");
						var timewindow = rdata.timewindow[0];
						var sensors = rdata.sensors;
				  		var html = "<li id='windowlist-window"+timewindow.id+"'"+"class='list-group-item'>"+
				  			"<h4 class='list-group-item-heading'>"+
				  				timewindow.name +" : <small>"+timewindow.on_time+"-"+timewindow.off_time+"</small>"+
				  			"</h4>"+
				  			"<span class='label-group'>";
				  		var arr=timewindow.sensor_ids.split(',');
				  		arr.forEach(function(i){
				  			sensors.forEach(function(j){
				  				if(j.id == i){
				  					html = html + "<span class='label label-default'>"+ j.location +"</span>";
				  				}
				  			})
				  		});
						html= html+"</span>"+
							"<span style='padding-left:10px;'>"+timewindow.temp+"&degC</span>"+
							"<a href='#' onclick="+'"'+"windowremove('#windowlist-window"+timewindow.id+"');return false;"+'"'+
							"style='color:black;'><span style='margin-top:-15px;' class='pull-right glyphicon glyphicon-remove'>"+
							"</span></a>"+
				  		"</li>";

						//Add the new time window into the proper position based on start time!
						var target=null;
						listgroup.find('.list-group-item-heading').children().each(function(){
							var start_hour = $(this).text().split('-')[0];
							var new_hour = timewindow.on_time.split('-')[0];
							if (new_hour>start_hour){
								target = $(this).parent().parent();
							}
						});
						if(target!=null)
						{
							target.after(html);
						}
						else
						{
							listgroup.prepend(html);
						}

						curtimewindows = get_current_timewindows();
						$("#setbtn").empty();
						if (curtimewindows.compare(lastsavedwindows)){
							$("#setbtn").append('Save');
							$("#setbtn").prop('disabled',true);}
						else {
							$("#setbtn").append('Save <span class="glyphicon glyphicon-transfer"</span>');
							$("#setbtn").removeProp('disabled');}
					}
					else
					{
						console.log('error');
					}
				},
				dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
			});
			$(this).val(null).trigger('change.select2');	
		})


		$('#setbtn').click(function(){
			curtimewindows = get_current_timewindows();
			if (!curtimewindows.compare(prevtimewindows)){
				updatetimetable(curtimewindows,'set');				
			} 
			else {
				console.log("no need to send to server. There are no changes!");
				$("#setbtn").empty();
				$("#setbtn").append('Save <span class="glyphicon glyphicon-ok"</span>');	
				$('#setbtn').prop('disabled', true);			
			}
		})


		$('#resetbtn').click(function(){
			curtimewindows = get_current_timewindows();
			if (!curtimewindows.compare(prevtimewindows) || !curtimewindows.compare(lastsavedwindows)){
				updatetimetable(prevtimewindows,'reset');
			}
			else{
				console.log("no need to send to server. There are no changes!");
				$("#setbtn").empty();
				$("#setbtn").append('Save');		
				$("#setbtn").prop('disabled',true);
				$("#resetbtn").prop('disabled',true);
			}
		})

	}) //end of $(document).ready()

	function windowremove(id){
		$(id).remove();
		curtimewindows = get_current_timewindows();
		$("#setbtn").empty();
		if (curtimewindows.compare(lastsavedwindows)){
			$("#setbtn").append('Save');
			$("#setbtn").prop('disabled',true);}
		else {
			$("#setbtn").append('Save <span class="glyphicon glyphicon-transfer"</span>');
			$("#setbtn").removeProp('disabled');}
	}

	function get_current_timewindows(){
		var timewindows=[];
		var window_id=[];
		var myRe =  new RegExp('windowlist-window([0-9]+)');
		$('#windowlist').children('.list-group-item').each(function(){
			window_id=myRe.exec($(this).attr('id'));
			timewindows.push(window_id[1]);
		});
		return timewindows;
	}

	function updatetimetable(arr, action){
		console.log(arr);
		$.ajax({
			type: "POST",
			contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
			url: "/edit/update_timetable",
			data: JSON.stringify({data:arr, profile:'CUSTOM'}),
			success: function(rdata) { //rdata = remote data that the server sends as feedback...
				// console.log(rdata.result);
				if (rdata.result==="ok"){
					console.log("success");
					lastsavedwindows = arr;
					if (action=="set"){
						$("#setbtn").empty();
						$("#setbtn").append('Save <span class="glyphicon glyphicon-ok"</span>');
						$("#setbtn").prop("disabled", true);
						$("#resetbtn").removeProp('disabled');
					}
					else if(action=="reset"){
						location.reload(true); 
					}
				}
				else
				{
					console.log('error');
					$("#setbtn").empty();
					$("#setbtn").append('Error <span class="glyphicon glyphicon-alert"</span>');
				}
			},
			dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
		});
	}


</script>