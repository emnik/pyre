<!DOCTYPE html>
<html>
	<head>
		<link rel="stylesheet" type="text/css" href="/stylesheets/select2.css" >
		<link rel="stylesheet" type="text/css" href="/stylesheets/select2-width-fix.css">
		<link rel="stylesheet" type="text/css" href="/stylesheets/pickatime/default.css">
		<link rel="stylesheet" type="text/css" href="/stylesheets/pickatime/default.time.css">
		<% include ../partials/head %>
	</head>

<body>
	<header>
		<% include ../partials/header_edits %>
	</header>

	<div class="container-fluid">
		<%counter=0;%>
		<%timetables.forEach(function(window){%>
		<%if(counter%4 == 0){%> <!--Define a row before the first and the fourth panel -->
		<div class="row"> 
		<%}%>
			<div class="col-xs-12 col-md-6 col-lg-3">
				<div class="panel panel-default" id='<%=window.id%>'>
				  <!-- Default panel contents -->
				  <div class="panel-heading">
				  	<span><%=window.name%></span>
				  	<span class="pull-right glyphicon glyphicon-remove remove-timewindow" onclick="remove_timewindow('<%=window.id%>');"></span>
				  </div>
				  <div class="panel-body">
				  	<div class="row">
					  	<div class="col-xs-12">
							<div class="input-group">
								<input type="text" value="<%=window.temp%>" name="setTargetTemp">
							</div>
						</div>
					</div>

					<div class="row" style="padding-top:15px;padding-bottom:15px;">
						<div class="col-xs-6" style="padding-right:5px;">
							<input class="timepicker form-control" name="on_time" placeholder="ON time" type="time" value="<%=window.on_time%>">
						</div>
						<div class="col-xs-6" style="padding-left:5px;">
							<input class="timepicker form-control" name="off_time" placeholder="OFF time" type="time" value="<%=window.off_time%>">
						</div>	
					</div>	

					<div class="row">
						<div class="col-xs-12">
							<select class="form-control" style="width:100%;" name="sensors" multiple="multiple">
								<optgroup label="Sensor location:">
								<% sensors.forEach(function(item){ %>
								  <option value="<%=item.id%>"
								  <%var arr = window.sensor_ids.split(',');
								  for (var i=0; i<arr.length; i++){
								  	if (item.id==arr[i]) {%> selected="selected" <%}
								  }%>><%= item.location %>
								  </option>
								 <%});%>
								 </optgroup>
							 </select>
						</div>
					</div>

				  </div>
				</div>
			</div>	
		<%counter++;%>
		<%if(counter%4==0 || counter == timetables.length){%> <!--Close the first row after Wednesday and the second after Saturday! -->
		</div>
		<%}%>
		<%})%>
		<div class="row" style="padding-bottom:20px;">
			<div class="col-xs-12 col-md-12 col-lg-12">
				<button id="resetbtn" type="button" class="btn btn-danger pull-left">Reset</button>
					<button id="savebtn" type="button" class="btn btn-success pull-right">Save</button>
			</div>
		</div>
	</div>

</body>

<% include ../partials/javascript.ejs %>
<script src="/javascripts/bootstrap.touchspin.js"></script>
<script src="/javascripts/select2/select2.min.js"></script>
<script src="/javascripts/pickatime/picker.js"></script>
<script src="/javascripts/pickatime/picker.time.js"></script>
<script src="/javascripts/custom.js"></script>

<script>

	$( document ).ready(function() {

		$("[name='sensors']").select2({
			minimumResultsForSearch: Infinity,
			placeholder: "Select sensors"
		});

		$('#savebtn').click(function(){
			var arr=[];
			var timeRangeError=false;
			$('.panel.panel-default').each(function(){
				var tw = new Object();
				tw.id = $(this).attr('id');
				tw.temp = $(this).find('[name="setTargetTemp"]').val();
				tw.on = $(this).find('[name="on_time"]').val();
				tw.off = $(this).find('[name="off_time"]').val();
				if(tw.off=='00:00'){tw.off='24:00'};
				if (tw.on>tw.off){
					timeRangeError = true;
				}
				tw.sensors = $(this).find('[name="sensors"]').val().join(',');
				arr.push(tw);
			});
			if (timeRangeError){
				console.log("The ON time cannot be later than the OFF time! The only \"exception\" is 24:00 which is interpreted as 00:00.\nIf you want to set a time range from before 00:00 until after 00:00 you should break it in two timewindows. One until 00:00 and one from 00:00 until...");
			}
			else
			{
				console.log(arr);
				update_timewindows(arr);
			}
		});

	}) //end of ( document ).ready(function()

	$('.timepicker').pickatime({
		format: 'HH:i',
		formatSubmit: 'HH:i',
		interval:30
	});
	 
	$("input[name='setTargetTemp']").TouchSpin({
	min: 0, // Minimum value.
	max: 100, // Maximum value.
	decimals: 1,
	boostat: 3, // Boost at every nth step.
	maxboostedstep: 2, // Maximum step when boosted.
	postfix: '&deg C', // Text after the input.
	// prefix: '<span class="glyphicon glyphicon-fire"></span>', // Text before the input.
	step: 0.1, // Incremental/decremental step on up/down change.
	stepinterval: 100, // Refresh rate of the spinner in milliseconds.
	stepintervaldelay: 500 // Time in milliseconds before the spinner starts to spin.
	});

	$("input[name='setTargetTemp']").change(function(){
		$("#savebtn").empty();
		$("#savebtn").append('Set <span class="glyphicon glyphicon-transfer"</span>');
	})

	function update_timewindows(arr){
		$.ajax({
				type: "POST",
				contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
				url: '/config/update_timewindows',
				data: JSON.stringify({data:arr}),
				/*JavaScript Object Notation is a way to share data between applications in object format.
				However, you cannot send an object over an HTTP request without first turning it into a string
				and sending it as a single variable. The functions JSON.parse() and JSON.stringify() do this for us.*/
				success: function(rdata) { //rdata = remote data that the server sends as feedback...
					// console.log(rdata.result);
					if (rdata.result==="ok"){
						console.log("success");
						$("#savebtn").empty();
						$("#savebtn").append('Set <span class="glyphicon glyphicon-ok"</span>');
					}
					else
					{
						console.log('error');
						$("#savebtn").empty();
						$("#savebtn").append('Error <span class="glyphicon glyphicon-alert"</span>');
					}
				},
				dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
		});
	}

	function remove_timewindow(id){
		console.log("removing the timewindow: "+id);
		$("#"+id).parent().remove();
	}

</script>