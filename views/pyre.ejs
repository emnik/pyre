<!DOCTYPE html>
<html>

<head>
	<link rel="stylesheet" type="text/css" href="/select2/css/select2.css">
	<link rel="stylesheet" type="text/css" href="/stylesheets/select2-frontpage-fix.css">
	<link rel="stylesheet" type="text/css" href="/stylesheets/font-awesome.min.css">
	<% include ./partials/head %>
</head>
<style type="text/css">

</style>

<script type="text/javascript">
	//we need to disable the right click context menu as to be able to handle both mouse and touch events for lowering and raising the temperature.
	document.addEventListener('contextmenu', event => event.preventDefault());
</script>

<body class="noselect">
	<header class="hidden-xs">
		<nav class="navbar navbar-inverse navbar-static-top">
			<div class="container-fluid">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"
					 aria-expanded="false">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
					<a class="navbar-brand" href="http://<%=base_url%>/">
						<span class="fa fa-fire" aria-hidden="true">
						</span> pyre
					</a>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
					<ul class="nav navbar-nav navbar-right">
						<!-- <li><a href="#" onclick="openPage('config')">Config</a></li> -->
						<li><a href="#" onclick="openPage('settings')">Config</a></li>
						<li><a href="#" onclick="openPage('about')">About</a></li>
						<!-- <li><a href="http://<%=base_url%>/about">About</a></li> -->
						<!-- <li><a id="awayOrNot" href="#" onclick="toggleAway()">Away</a></li> -->
						<%if(!isLocal){%>
						<li><a href="http://<%=base_url%>/logout">Logout</a></li>
						<%}%>
					</ul>
				</div><!-- /.navbar-collapse -->
				<hr style="margin:0px;">
			</div><!-- /.container-fluid -->
		</nav>
	</header>


	<div id="errModal" class="modal fade">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title">Overlap Error</h4>
				</div>
				<div class="modal-body">
					<p>There is an overlap in time windows for the current time. Please edit the schedule to fix it.<br />
						Until then the status is set to <strong>Paused</strong>.</p>
				</div>
				<div class="modal-footer">
					<button name="okerr" type="button" class="btn btn-primary">OK</button>
				</div>
			</div><!-- /.modal-content -->
		</div><!-- /.modal-dialog -->
	</div><!-- /.modal -->

	<div id="infoModal" class="modal fade">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">
						<!-- <span class="fa fa-info"></span> -->
						Thermostat messages
					</h4>
				</div>
				<div class="modal-body">
					<p></p>
					<!-- <ul> -->
						<!-- <li></li> -->
					<!-- </ul> -->
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				</div>
			</div><!-- /.modal-content -->
		</div><!-- /.modal-dialog -->
	</div><!-- /.modal -->


	<div id="overrideModal" class="modal fade">
		<div class="modal-dialog">
			<div class="modal-content">
				<!-- <div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">
						Hold for...
					</h4>
				</div> -->
				<div class="modal-body">
					<b class="modal-title">
						Hold <span id="overrideTarget"></span> for...
					</b>
					<div class="radio">
						<label>
						  <input type="radio" name="overrideOptions" id="overrideOptions1" value="timed1">
						  2 hours
						</label>
					  </div>
					  <div class="radio">
						<label>
						  <input type="radio" name="overrideOptions" id="overrideOptions2" value="timed2">
						  4 hours
						</label>
					  </div>
					  <div class="radio">
						<label>
						  <input type="radio" name="overrideOptions" id="overrideOptions3" value="schedule">
						  Until next schedule
						</label>
					  </div>
					  <div class="radio">
						<label>
						  <input type="radio" name="overrideOptions" id="overrideOptions4" value="manual">
						  Until I change it
						</label>
					  </div>
				</div>
				<div class="modal-footer">
					<button type="button" id="cancelOverride" class="btn btn-sm btn-danger" data-dismiss="modal">Cancel</button>
				</div>
			</div><!-- /.modal-content -->
		</div><!-- /.modal-dialog -->
	</div><!-- /.modal -->

	<div class='device-check visible-xs' data-device='xs'></div>
	<div class='device-check visible-sm' data-device='sm'></div>
	<div class='device-check visible-md' data-device='md'></div>
	<div class='device-check visible-lg' data-device='lg'></div>

	<!-- ################################################################################################################-->
	<!-- ########################################### ONLY FOR PITFT 2.8 ################################################# -->
	<!-- ################################################################################################################-->


	<div class="visible-xs-block" style="height:100%;  overflow-y:hidden; overflow-x:hidden;">
		<div class="container-fluid">
			<div class="row">
				<div class="col-xs-12">
					<div style="margin-top:10px;">
						<% if (state.err!=="Overlap") {%>
							<% if (status ==="Working") {%>
							<span id="awayOrNot-pitft" class="fa fa-2x fa-home fa-pull-left" style="cursor:pointer; color:lightseagreen;" onClick="toggleAway()"></span>
							<span id="status-pitft" class="fa fa-2x fa-fire status-pitft working""></span>
							<% } else if (status ==="Paused") {%>
								<span id="awayOrNot-pitft" class="fa fa-2x fa-home fa-pull-left" style="cursor:pointer; color:lightseagreen;" onClick="toggleAway()"></span>
								<span id="status-pitft" class="fa fa-2x fa-fire status-pitft paused""></span>
								<% } else if (status ==="Away") {%>
									<span id="awayOrNot-pitft" class="fa fa-2x fa-road fa-pull-left" style="cursor:pointer; color:lightseagreen;" onClick="toggleAway()"></span>
									<span id="status-pitft" class="fa fa-2x fa-fire status-pitft away""></span>
								<% } else {%>
									<span id="awayOrNot-pitft" class="fa fa-2x fa-home fa-pull-left" style="cursor:pointer; color:lightseagreen;" onClick="toggleAway()"></span>
									<span id="status-pitft" class="fa fa-2x fa-fire status-pitft default""></span>
								<% }
							} else { %>
								<span id="awayOrNot-pitft" class="fa fa-2x fa-home fa-pull-left" style="cursor:pointer; color:lightseagreen;"></span>
								<span id="status-pitft" class="fa fa-2x fa-fire status-pitft default" style="color:lightseagreen;"></span>
							<%};%>
							<span id="override-pitft" class="fa fa-2x fa-thumb-tack hidden" style="color:red;margin-left:5px;cursor:pointer;" onClick="overrideTemp(<%if( state.err==''){%><%=time_window_data[0].temp%><%}else{%><%='null'%><%}%>, 'cancel')"> </span>
						<div class="pull-right">
							<span id="infos-pitft" class="fa fa-2x fa-info-circle" style="cursor:pointer; color:rgb(130, 155, 238); padding-right: 10px;" onClick="showInfoModal();"></span>
							<span class=" fa fa-2x fa-navicon" style="cursor:pointer; color:lightseagreen;" onClick="return openPage('/config/settings')"></span>
						</div>
				</div>
			</div>
		</div>
		<div class="row">
			<div id="temp-pitft" class="col-xs-12" style="color:white; font-size:500%; text-align: center; ">
				<div style="margin-top:0px;">
					<span>
						...
					</span>&deg;C
				</div>
			</div>
			<div class="col-xs-12" style="color:white; margin-left: auto; margin-right:auto; text-align: center;">
				<button type="button" id="lowerTempBtn" class="btn btn-danger pull-left" style="padding:5px 15px 0px 15px;font-size:20px;">
					<i class="fa fa-minus"></i>
				</button>
				<div style="display: inline-block; padding-top:6px;color:rgb(212, 92, 92); font-size:20px;">
					Target:
					<span id="targetTemp-pitft">
						<% if (state.err==="") {%>
						<%=time_window_data[0].temp%>
						<% } else {%> -
						<%}%>
					</span> &deg C
				</div>

				<button type="button" id="raiseTempBtn" class="btn btn-danger pull-right" style="padding:5px 15px 0px 15px;font-size:20px;">
					<i class="fa fa-plus"></i>
				</button>
			</div>
		</div>

		<div class="row hidden">
			<div class="col-xs-12" style="color:white;" id="details-pitft">
				<%if (typeof time_window_data[0]!=="undefined" && Object.keys(time_window_next).length!==0){%>
				<p id="info-pitft" style="color:lightblue;font-size:small;margin-bottom: 0px;">
					<span class="fa fa-info-circle" style="padding-right:5px;"></span>
					<%if (time_window_next.on_time === time_window_data[0].off_time) {%>
					At
					<%=time_window_next.on_time%> target temp is scheduled to
					<%=time_window_next.temp%>&degC
					<%} else if(time_window_data[0].off_time<time_window_next.on_time){%>
					There is no schedule between
					<%=time_window_data[0].off_time%> to
					<%=time_window_next.on_time%>
					<%} else if (time_window_data[0].off_time!=='24:00'){%>
					There is no schedule after
					<%=time_window_data[0].off_time%>
					<%} else {%>
					The schedule will be updated at 24:00
					<%}%>
				</p>
				<%}else if (typeof time_window_data[0]!=="undefined" && Object.keys(time_window_next).length===0){%>
				<p id="info-pitft" style="color:lightblue;font-size:small;">
					<span class="fa fa-info-circle" style="padding-right:5px;"></span>
					<%if (time_window_data[0].off_time!=='24:00'){%>
					There is no schedule after
					<%=time_window_data[0].off_time%>
					<%} else {%>
					The schedule will be updated at 24:00
					<%}%>
				</p>
				<%}else if (typeof time_window_data[0]==="undefined" && Object.keys(time_window_next).length===0){%>
				<p id="info-pitft" style="color:lightblue;font-size:small;">
					<span class="fa fa-info-circle" style="padding-right:5px;"></span>
					There is no schedule for today!
				</p>
				<%} else if (typeof time_window_data[0]==="undefined" && Object.keys(time_window_next).length!==0){%>
				<p id="info-pitft" style="color:lightblue;font-size:small;">
					<span class="fa fa-info-circle" style="padding-right:5px;"></span>
					<%if (time_window_next.on_time>curtime){%>
					At
					<%=time_window_next.on_time%> target temp is scheduled to
					<%=time_window_next.temp%>&degC
					<%} else {%>
					There is no schedule from now on for today!
					<%}%>
				</p>
				<%}%>
			</div>
		</div>

		<div class="row" style="position:fixed;bottom:10px; font-size:16px;">
			<div class="col-xs-12" style="color:white;">
				<p>Sensors:
					<span id="sensorslist-pitft" class="label-group">
						<% sensor_location.forEach(function(i){%>
						<span id="sensor-pitft<%=i.id%>" class="label label-success">
							<%=i.location;%>
						</span>
						<%})%>
					</span>
				</p>
			</div>

			<div class="col-xs-12" style="margin-top:0px;color:white;">
				<p>
					<span class="label-group" id='profiles-pitft'>
						<% profiles.forEach(function(item){ %>
						<a onClick="return openPage('/edit/<%=item.id%>')" class="label <%if (item.status==1){%>label-success<%} else {%>label-default <%};%>">
							<%= item.name %>
						</a>
						<%});%>
					</span>
				</p>
			</div>
		</div>
	</div>
	</div>


	<!-- ################################################################################################################-->
	<!-- #################### ONLY FOR TABLETS OR PCS (DESKTOP / LAPTOP) ################################################ -->
	<!-- ################################################################################################################-->

	<div class="hidden-xs" style="margin-left:20px;margin-right:20px;margin-top:20px;">
		<div class="container-fluid">
			<div class="row">
				<!--main row-->
				<div class="col-sm-12 col-md-12 col-lg-6">
					<!-- first of 2 main columns-->
					<div class="row">
						<!-- internal row of first main column-->
						<div class="col-xs-6">
							<!--first secondary column of main column-->
							<div class="card-main" style="height:450px;">
								<div onclick="toggleAway()" style="margin-top:40px;text-align:center;#F6F4EC;">
									<div id="status" style="padding-bottom: 10px;">
										<% if (state.err!=="Overlap") {%>
										<% if (status ==="Working") {%>
										<!-- <span class="label label-success">Working</span> -->
										<span class="status working fa fa-fire"></span>
										<% } else if (status ==="Paused") {%>
										<!-- <span class="label label-info">Paused</span> -->
										<span class="status paused fa fa-fire "></span>
										<% } else if (status ==="Away") {%>
										<!-- <span class="label label-default">Away</span> -->
										<span class="status away fa fa-fire"></span>
										<% } else {%>
										<!-- <span class="label label-default">...</span> -->
										<span class="status default fa fa-fire"></span>
										<% }
										}; %>
									</div>
									<!-- status can be either: Working / Paused / Overlap-->
								</div>
								<div id="temp" style="text-align: center;">
									<div style="font-size:600%;font-weight:lighter;">
										<!-- <i class="fa fa-thermometer-half" aria-hidden="true"></i> -->
										<span>
											...
										</span>&deg;C
									</div>
								</div>

								<div style="margin-top:60px; margin-left:10px;margin-right:10px;">
									<div id="circle" class="circle" style="margin-left:auto;margin-right:auto;">
										<strong>
											<span id="newTargetTemp">
												<% if (state.err=="") {%>
												<%=time_window_data[0].temp%>
												<% } else {%> -
												<%}%>
											</span>
											&deg C
										</strong>
									</div>

									
									<div style="margin-top:20px;padding-left:15px;padding-right:15px;">
										<input id="range" type="range" min="<%=minTemp%>" max="<%=maxTemp%>" step='<%=stepTemp%>'>
									</div>

									<div style="color:white; padding-left:10px;margin-top: 20px;text-align: center;" id="details">
											<%if (typeof time_window_data[0]!=="undefined" && Object.keys(time_window_next).length!==0){%>
											<p id="info" style="color:lightblue;font-size:small;">
												<span class="fa fa-info-circle" style="padding-right:5px;"></span>
												<%if (time_window_next.on_time === time_window_data[0].off_time) {%>
												At
												<%=time_window_next.on_time%> target temp is scheduled to
												<%=time_window_next.temp%>&degC
												<%} else if(time_window_data[0].off_time<time_window_next.on_time){%>
												There is no schedule between
												<%=time_window_data[0].off_time%> to
												<%=time_window_next.on_time%>
												<%} else if (time_window_data[0].off_time!=='24:00'){%>
												There is no schedule after
												<%=time_window_data[0].off_time%>
												<%} else {%>
												The schedule will be updated at 24:00
												<%}%>
											</p>
											<%}else if (typeof time_window_data[0]!=="undefined" && Object.keys(time_window_next).length===0){%>
											<p id="info" style="color:lightblue;font-size:small;">
												<span class="fa fa-info-circle" style="padding-right:5px;"></span>
												<%if (time_window_data[0].off_time!=='24:00'){%>
												There is no schedule after
												<%=time_window_data[0].off_time%>
												<%} else {%>
												The schedule will be updated at 24:00
												<%}%>
											</p>
											<%}else if (typeof time_window_data[0]==="undefined" && Object.keys(time_window_next).length===0){%>
											<p id="info" style="color:lightblue;font-size:small;">
												<span class="fa fa-info-circle" style="padding-right:5px;"></span>
												There is no schedule for today!
											</p>
											<%} else if (typeof time_window_data[0]==="undefined" && Object.keys(time_window_next).length!==0){%>
											<p id="info" style="color:lightblue;font-size:small;">
												<span class="fa fa-info-circle" style="padding-right:5px;"></span>
												<%if (time_window_next.on_time>curtime){%>
												At
												<%=time_window_next.on_time%> target temp is scheduled to
												<%=time_window_next.temp%>&degC
												<%} else {%>
												There is no schedule from now on for today!
												<%}%>
											</p>
											<%}%>
										</div>



								</div>

							</div>
							<!--end of main-card-->
						</div>
						<!--end of first secondary column of main column-->

						<div class="col-xs-6">
							<!-- <div class="row"> -->
							<div class="card-secondary" style="height:450px;">
								<p>
									<span onClick="return openPage('/edit/mode')" class="btn btn-xs btn-default pull-right" style="margin-right:10px; letter-spacing: 1px; cursor:pointer;">Set up</span>
									SCHEDULE
								</p>

								<p id="date"></p>
								<p id="override"></p>
								
								<div id="content">
									<h2>Upcoming events
									<span class="btn btn-xs btn-default pull-right" style="margin-right:10px;margin-top:5px;cursor:pointer;" onClick="return openPage('/edit/<% profiles.forEach(function(item){if (item.status==1){%><%=item.id%><%}})%>')">edit</span>
									</h2>
									<p>
										<!-- <h2> -->
											(<% profiles.forEach(function(item){if (item.status==1){%><%= item.name %><%}});%> Mode)
										<!-- </h2> -->
									</p>
									<% if (typeof time_window_data[0]!=="undefined"){%>
									<ul class="timeline">
										<% if (typeof time_window_data[0]!=="undefined") {%>
										<li class="event" data-date="<%=time_window_data[0].on_time%> - <%=time_window_data[0].off_time%>">
											<h3>Current</h3>
											<p>Setpoint:
												<%=time_window_data[0].temp%> &degC</p>
											<!-- <p>Sensors used:</p> -->
										</li>
										<%}%>
										<% if (Object.keys(time_window_next).length!==0) {%>
										<li class="event" data-date="<%=time_window_next.on_time%> - <%=time_window_next.off_time%>">
											<h3>Next</h3>
											<p>Setpoint:
												<%=time_window_next.temp%> &degC</p>
											<!-- <p>Sensors used:</p> -->
										</li>
										<%}%>
									</ul>
									<%} else {%>
										<p> There is no schedule for today...</p>
									<%}%>
								</div>


								<!-- <p>
									<span class="label-group" id='profiles'>
										<% profiles.forEach(function(item){ %>
										<a onClick="return openPage('/edit/<%=item.id%>')" class="label <%if (item.status==1){%>label-success<%} else {%>label-default <%};%>">
											<%= item.name %>
										</a>
										<%});%>
									</span>
								</p> -->
							</div>
							<!-- </div> -->
						</div>
						<!--end of second column of 1st main column-->

					</div>
					<!--end of internal row-->
					<div class="row">
						<!--second internal row-->

						<div class="col-xs-6">
							<div class="card-main" style="height:130px;">
								<p>STATUS</p>
								<p>
									<button id="setHome" type="button" class="btn btn-primary btn-lg outline" onClick="toggleAway();">
										<i class="fa fa-home"></i> Home
									</button>
									<button id="setAway" type="button" class="btn btn-primary btn-lg outline" onClick="toggleAway();">
										<i class="fa fa-road"></i> Away
									</button>
								</p>
							</div>
						</div>

						<div class="col-xs-6">
							<div class="card-extra" style="height:130px;">
								<p>SENSORS CURRENTLY USED</p>
								<div style="margin-right:15px; ">
									<span style="font-size: 65px; color:rgb(45, 50, 53); text-shadow: -1px 0 lightgrey, 0 1px lightgrey, 1px 0 lightgrey, 0 -1px lightgrey;"
									 class="fa fa-bullseye fa-pull-right"></span>
									<span id="sensorslist" style="padding-left:10px; padding-top:10px; font-size:20px;" class="label-group pull-left">
										<% sensor_location.forEach(function(i){%>
										<span id="sensor<%=i.id%>" class="label label-success">
											<%=i.location;%>
										</span>
										<%})%>
									</span>
								</div>
							</div>
						</div>

					</div>

				</div>
				<!--end of first main column-->



				<div class="col-sm-12 col-md-12 col-lg-6""> <!--second main column-->
					<div class=" row">
					<div class="col-xs-12">
						<div class=" card-main" style="height:450px;">
							<p>TEMPERATURE CHART</p>
							<canvas id="MyChart" style="padding-left:10px; padding-top:10px; padding-right:15px; max-height:350px;"></canvas>
							<div class="row" style="margin-left:10px; margin-right:10px; padding-bottom:10px;">
								<div class="col-xs-5">
									<select id="graph_duration" name="graph_duration" class="form-control" style="width:100%;">
										<option value="1" selected="selected">Live</option>
										<option value="12">Last 12 hours</option>
										<option value="24">Last day (24h)</option>
										<option value="168">Last week</option>
										<option value="672">Last month</option>
									</select>
								</div>
								<div class="col-xs-5">
									<select disabled id="graph_sensor" name="graph_sensor" class="form-control" style="width:100%">
										<% sensor_location.forEach(function(i){%>
										<option value="<%=i.id%>">
											<%=i.location%>
										</option>
										<%})%>
										<%if(sensors.length>1){%>
										<option value="<%=sensors%>" selected="selected">All locations (average)</option>
										<%}%>
									</select>
								</div>
								<div class="col-xs-2">
									<button id="graph_refresh" type="button" class="pull-right btn btn-front"><span class="fa fa-refresh"></span></button>
								</div>
							</div>
						</div>
					</div>
					<div class="col-xs-12">
						<div class="row">
							<div class="col-xs-6">
								<div class="card-secondary" id="system" onClick="return openPage('/config/system');" style="cursor: pointer;height:130px;">
									<p>SETTINGS</p>
									<div style="text-align: right; margin-right:15px; ">
										<span style="font-size: 65px; color:rgb(30, 37, 42); text-shadow: -1px 0 violet, 0 1px violet, 1px 0 violet, 0 -1px violet;"
										 class="fa fa-sliders"></span>
									</div>
								</div>
                            </div>
                            <%if (sinric==="enabled"){%>
                            <div class="col-xs-6">
								<div class="card-extra" id="system" style="height:130px;">
									<p>ALEXA (Sinric)</p>
										<div style="margin-right:15px;">
											<span style="font-size: 65px; color:rgb(45, 50, 53); text-shadow: -1px 0 lightslategrey, 0 1px lightslategrey, 1px 0 lightslategrey, 0 -1px lightslategrey;"
										 	class="fa fa-amazon fa-pull-right"></span>
										<span style="padding-left:10px; padding-top:10px; font-size:20px;" class="pull-left">
											<span id="sinricStatus" class="label label-default">
												Checking status ...
											</span>
										</span>
									</div>
								</div>
                            </div>
                            <%}%>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</body>

<% include ./partials/javascript.ejs %>
<script src="/socket.io/socket.io.js"></script>
<script src="/chart.js/Chart.bundle.js"></script>
<script src="/select2/js/select2.min.js"></script>
<script src="/javascripts/custom.js"></script>
<script src="/object-hash/object_hash.js"></script>

<script>
	var curdate = new Date();
	var curday = curdate.getDay();
	var infomsgPitft = ""; //to revert to the initial message when a sensor becomes available again!
	var infomsg = ""; //to revert to the initial message when a sensor becomes available again!
	var myVar; //used for the timing of raising and lowering the temperature
	var socket;
	var myChart;
	var overrideInfo="";
	var grid=get_current_grid_option();
	var gridPrev=get_current_grid_option();


	$(document).ready(function () {

		$('#date').text(curdate.toDateString());

		infomsgPitft = $('#info-pitft').clone();
		infomsg = $('#info').clone();
		socket = io.connect();

		var selected_profile = $('#profiles-pitft>a.label.label-success').text().trim();
		if (selected_profile == "DAYNIGHT") {
			$('#info-pitft').remove();
			$('#info').remove();
			infomsg = '<p id="info" style="color:lightblue;font-size:small;">' +
				'<span class="fa fa-info-circle" style="padding-right:5px;"></span>' +
				' At <%=time_window_next.on_time%> target temp is scheduled to <%=time_window_next.temp%>&degC'
			$('#details').append(infomsg);
			infomsgPitft = '<p id="info-pitft" style="color:lightblue;font-size:small;">' +
				'<span class="fa fa-info-circle" style="padding-right:5px;"></span>' +
				' At <%=time_window_next.on_time%> target temp is scheduled to <%=time_window_next.temp%>&degC'
			$('#details-pitft').append(infomsgPitft);
		}
		else if (selected_profile == "CONSTANT") {
			$('#info').remove();
			$('#info-pitft').remove();
			infomsg = '<p id="info" style="color:lightblue;font-size:small;">' +
				'<span class="fa fa-info-circle" style="padding-right:5px;"></span>' +
				'Thermostat is set to constant operation!'
			$('#details').append(infomsg);
			infomsgPitft = '<p id="info-pitft" style="color:lightblue;font-size:small;">' +
				'<span class="fa fa-info-circle" style="padding-right:5px;"></span>' +
				'Thermostat is set to constant operation!'
			$('#details-pitft').append(infomsgPitft);
		}

		//send all the working profile data to server to inform the other connected clients!
		var dataInfo = {};
		<%if (typeof time_window_data[0] !== "undefined") {%>
			dataInfo['id'] = '<%=time_window_data[0].id%>';
			dataInfo['on'] = '<%=time_window_data[0].on_time%>';
			dataInfo['off'] = '<%=time_window_data[0].off_time%>';
			dataInfo['sensors'] = '<%=time_window_data[0].sensor_ids%>';
		<%};%>
		<%if (Object.keys(time_window_next).length !== 0) {%>
			dataInfo['next_id'] = '<%=time_window_next.id%>';
			dataInfo['next_on'] = '<%=time_window_next.on_time%>';
			dataInfo['next_off'] = '<%=time_window_next.off_time%>';
			dataInfo['next_sensors'] = '<%=time_window_next.sensor_ids%>';
			dataInfo['next_temp'] = '<%=time_window_next.temp%>';
		<%};%>
			console.log('sending working data...');
		// console.log(dataInfo);
		var hash = objectHash.sha1(dataInfo);
		// console.log(hash);
		// socket.emit('working_data', data_info);
		socket.emit('working_data', hash);


	//Get the initial data and get started...
		<%
		var allfound = 0;
		var sumtemp = 0;
		var prioritySum = 0;
		for (var i = sensors.length - 1; i >= 0; i--) {
			var sensor_found = 0;
			for (var j = tempdata.length - 1; j >= 0; j--) {
				if (tempdata[j].id === default_sensor) {
					var default_temp = tempdata[j].average;
				}
				if (sensors[i] == tempdata[j].id) {
					allfound = allfound + 1;
					sensor_found = 1;
					prioritySum += tempdata[j].priority;
					sumtemp = sumtemp + tempdata[j].average * tempdata[j].priority;
				}
			}
			if (sensor_found === 0) {%>
				$('#sensor' +<%=sensors[i] %>).removeClass('label-success');
				$('#sensor' +<%=sensors[i] %>).addClass('label-danger');
				$('#sensor' +<%=sensors[i] %>).addClass('offline');

				$('#sensor-pitft' +<%=sensors[i] %>).removeClass('label-success');
				$('#sensor-pitft' +<%=sensors[i] %>).addClass('label-danger');
				$('#sensor-pitft' +<%=sensors[i] %>).addClass('offline');
			<%}
			else {%>
				$('#sensor' +<%=sensors[i] %>).removeClass('offline');
				$('#sensor' +<%=sensors[i] %>).removeClass('label-danger');
				$('#sensor' +<%=sensors[i] %>).addClass('label-success');

				$('#sensor-pitft' +<%=sensors[i] %>).removeClass('offline');
				$('#sensor-pitft' +<%=sensors[i] %>).removeClass('label-danger');
				$('#sensor-pitft' +<%=sensors[i] %>).addClass('label-success');
			<%}
		}


		if (sumtemp != 0) {
			var avgtemp = Math.round(sumtemp / prioritySum * 10) / 10;
		}

		if (allfound == 0) { var noData = true; } else { var noData = false; }
		%>

		if (<%= noData %>){ //true if no therm data comes for the selected sensors...

		console.log("No therm data from any off the sensors!!! Either Offline, or disabled!");

		$("#status-pitft").removeClass("working default away paused");
		$("#status-pitft").addClass("paused");

		$("#status>span").removeClass("default");
		$("#status>span").addClass("paused");

		$('#temp>div>span, #temp-pitft>div>span').text(<%=default_temp %>); //this is the first attempt... If the sensors are all remote, we might get data in a while...

		var msg = '<p id="info" style="color:lightblue;font-size:small;">' +
			'<span class="fa fa-warning" style="padding-right:5px;"></span>' +
			' Paused until a sensor becomes online.' +
			'</p>'
		$('#info').remove();
		$('#details').append(msg);
		var msgPitft = '<p id="info-pitft" style="color:lightblue;font-size:small;">' +
			'<span class="fa fa-warning" style="padding-right:5px;"></span>' +
			' Paused until a sensor becomes online.' +
			'</p>'
		$('#info-pitft').remove();
		$('#details-pitft').append(msgPitft);
	}
		else
	{
		// manage(<%=avgtemp%>);
		$('#temp>div>span, #temp-pitft>div>span').text(<%=avgtemp %>);
	}


	$('#range').val(function(index, value){
		<% if (state.err==""){%>
			value = <%=time_window_data[0].temp%>
		<%} else {%>
			value = $('#temp>div>span').text()
		<%}%>
		return value
	});


	socket.on('temperatures', function (data) {
		checkTimeWindow(); //when I get new data I check if I am in the right time window!!!
		console.log(data);
		var allfound = 0;
		var sumtemp = 0;
		var prioritySum = 0;
		var sensors = "<%=sensors%>".split(',');
		for (var i = sensors.length - 1; i >= 0; i--) {
			var sensor_found = 0;
			for (var j = data.length - 1; j >= 0; j--) {
				if (data[j].id === <%= default_sensor %>){
		var default_temp = data[j].average;
	}
	if (sensors[i] == data[j].id) {
		allfound = allfound + 1;
		sensor_found = 1;
		prioritySum += data[j].priority;
		sumtemp = sumtemp + data[j].average * data[j].priority;
	}
				}
	if (sensor_found === 0) {
		$('#sensor' + sensors[i]).removeClass('label-success');
		$('#sensor' + sensors[i]).addClass('label-danger');
		$('#sensor' + sensors[i]).addClass('offline');

		$('#sensor-pitft' + sensors[i]).removeClass('label-success');
		$('#sensor-pitft' + sensors[i]).addClass('label-danger');
		$('#sensor-pitft' + sensors[i]).addClass('offline');
	}
	else {
		$('#sensor' + sensors[i]).removeClass('offline');
		$('#sensor' + sensors[i]).removeClass('label-danger');
		$('#sensor' + sensors[i]).addClass('label-success');

		$('#sensor-pitft' + sensors[i]).removeClass('offline');
		$('#sensor-pitft' + sensors[i]).removeClass('label-danger');
		$('#sensor-pitft' + sensors[i]).addClass('label-success');
	}
			}

	if (sumtemp != 0) {
		var avgtemp = Math.round(sumtemp / prioritySum * 10) / 10;
	}

	if (allfound == 0) { //true if no therm data comes for the selected sensors...
		console.log("No therm data from any off the sensors!!! Either Offline, or disabled!");
		$("#status-pitft").removeClass("working default away paused");
		$("#status-pitft").addClass("paused");
		// $("#status-pitft").text("Paused");
		$("#status>span").removeClass("default");
		$("#status>span").addClass("paused");
		$("#temp-pitft>div>span, #temp>div>span").text(default_temp); //If the sensors are all remote, we will get data when / if they become available... Until then we just use the default sensor to show the temperature. We don't use this value though for managing the thermostat.
		// var msg = '<p id="info" style="color:lightblue;font-size:small;">' +
		// 	'<span class="fa fa-warning" style="padding-right:5px;"></span>' +
		// 	' Paused until a sensor becomes online.' +
		// 	'</p>'
		// $('#info').remove();
		// $('#details').append(msg);
		// var msgPitft = '<p id="info-pitft" style="color:lightblue;font-size:small;">' +
		// 	'<span class="fa fa-warning" style="padding-right:5px;"></span>' +
		// 	' Paused until a sensor becomes online.' +
		// 	'</p>'
		// $('#info-pitft').remove();
		// $('#details-pitft').append(msgPitft);
	}
	else {
		$("#temp-pitft>div>span, #temp>div>span").text(avgtemp);

		// $('#info, #info-pitft').remove();
		// $('#details').append(infomsg);
		// $('#details-pitft').append(infomsgPitft);


		//update live graph with new data if <Live graph> is selected.

		if (grid !='xs'){
			var duration = $('#graph_duration').val();
			if (duration == '1') { //Live graph
				update_live_graph(avgtemp);
			}
		} 
		// else {
		// 	console.log('chart is not visible and will not be updated with the new data...');
		// }
	}
	});


	socket.on('check_data', function (data) {
		//compare our data with those, that the server just send us!
		//If there is a difference reload to get the updated data!
		// console.log(data);
		var localData = {};
			<%if (typeof time_window_data[0] !== 'undefined') {%>
			localData['id'] = '<%=time_window_data[0].id%>';
			localData['on'] = '<%=time_window_data[0].on_time%>';
			localData['off'] = '<%=time_window_data[0].off_time%>';
			localData['sensors'] = '<%=time_window_data[0].sensor_ids%>';
			<%};%>
			<%if (Object.keys(time_window_next).length !== 0) {%>
			localData['next_id'] = '<%=time_window_next.id%>';
			localData['next_on'] = '<%=time_window_next.on_time%>';
			localData['next_off'] = '<%=time_window_next.off_time%>';
			localData['next_sensors'] = '<%=time_window_next.sensor_ids%>';
			localData['next_temp'] = '<%=time_window_next.temp%>';
			<%};%>
			var hash = objectHash.sha1(localData);
		// console.log(hash);
		if (hash !== data) {
			console.log('Data mismatch - Request update...')
			setTimeout(function () { location.href = location.href; }, 2000); //use 2 seconds delay to give time to the server to respond...
		}
		else {
			console.log('Data check: successfull!')
		}
	});

	socket.on('curstate', function (data) {
		console.log(data);
		handleStateUpdate(data)
	});

	socket.on('sinric', function(data){
		$('#sinricStatus').removeClass('label-success label-info label-danger label-default')
		if (data.status==='Online'){
			$('#sinricStatus').addClass('label-success')
		 } else if (data.status==='Reconnecting ...') {
			$('#sinricStatus').addClass('label-info')
		 } else if (data.status==='Server down!') {
			$('#sinricStatus').addClass('label-danger')
		 } else {
			$('#sinricStatus').addClass('label-default')
		 }
		$('#sinricStatus').text(data.status);
	})

	socket.on('disconnect', function () {
		console.log('SOCKET DISCONNECTED!'); //the server is propably down
		//I could trigger a 404error page with location reload but that would be a problem when
		//forever is running and will get the server up again...
	})


	$("[name='okerr']").click(function () {
		$('#errModal').modal('hide');
	});


	if (<%= (state.err === "Overlap") %>) //true if there is an overlap
	{
		$("#status-pitft").removeClass("working default away paused");
		$("#status-pitft").addClass("default");
		$("#status>span").removeClass("default working paused away");
		$("#status>span").addClass("default");
		$('#errModal').modal('show');
	}
		else if (<%= (state.err === "No_time_window") %>) //true if not in a time window
	{
		$("#status-pitft").removeClass("working default away paused");
		$("#status-pitft").addClass("paused");
		$("#status>span").removeClass("default working paused away");
		$("#status>span").addClass("paused");
	}
		else if (<%= tempdata === {} %>) //no error -we are in a time window... but no initial temp data - this should not happen...
	{
		$("#status-pitft").removeClass("working default away paused");
		$("#status-pitft").addClass("default");
		$("#status>span").removeClass("default working paused away");
		$("#status>span").addClass("default");
	}

	$('[name="graph_duration"]').select2({
		minimumResultsForSearch: Infinity
	});
	$('[name="graph_sensor"]').select2({
		minimumResultsForSearch: Infinity
	});


	$("#raiseTempBtn").on('mousedown touchstart', function () {
			<%if (state.err=='') {%>
				tempC = $('#targetTemp-pitft').text();
				var fl = parseFloat(tempC);
				<%} else {%>
				tempC = $('#temp>div>span').text();
				var fl = parseFloat(tempC);
				fl = Math.round(fl)
			<%}%>
			const step = <%=stepTemp%>;
			const max = <%=maxTemp%>;
			myVar = window.setInterval(function () {
				fl = Math.round(fl * 10 + step*10) / 10;
				if ((fl <= parseFloat(tempC) + 2 && (fl<max))) {
					$('#newTargetTemp, #targetTemp-pitft').text(fl);
					$('#range').val(fl);
				}
				else if (fl >= max) {
					$('#newTargetTemp, #targetTemp-pitft').text(max);
					$('#range').val(max);
				}
				else {
					window.clearInterval(myVar);
				}
			}, 300);
			return false;
	});


	$("#raiseTempBtn").on('mouseup touchend', function () {
			window.clearInterval(myVar); // in case the mousedown-touchstart ended before clearingInterval...
			tempC = $('#targetTemp-pitft').text();
			var t = parseFloat(tempC);
			$("input:radio").prop('checked', false);
    		$("input:radio").closest("label").removeClass("active");
			$("#overrideTarget").text(t);
			$("#overrideModal").modal({
				keyboard:false,
				backdrop:false
			});
			return false;
	});


	$("#lowerTempBtn").on('mousedown touchstart', function () {
		<%if (state.err=='') {%>
			tempC = $('#targetTemp-pitft').text();
			var fl = parseFloat(tempC);
			<%} else {%>
			tempC = $('#temp>div>span').text();
			var fl = parseFloat(tempC);
			fl = Math.round(fl)
		<%}%>
		const step = <%=stepTemp%>;
		const min = <%=minTemp%>; 
		myVar = window.setInterval(function () {
			fl = Math.round(fl * 10 - step*10) / 10;
			if ((fl >= parseFloat(tempC) - 2) && (fl > min)) {
				$('#newTargetTemp, #targetTemp-pitft').text(fl);
				$('#range').val(fl);
			}
			else if (fl <= min) {
				$('#newTargetTemp, #targetTemp-pitft').text(min);
				$('#range').val(min);
			}
			else {
				window.clearInterval(myVar);
			}
		}, 300);
	});

	$("#lowerTempBtn").on('mouseup touchend', function () {
			tempC = $('#targetTemp-pitft').text();
			window.clearInterval(myVar);
			var t = parseFloat(tempC);
			// setTemp(t);

			$("input:radio").prop('checked', false);
    		$("input:radio").closest("label").removeClass("active");
			$("#overrideTarget").text(t);
			$("#overrideModal").modal({
				keyboard:false,
				backdrop:false
			});
		});

	update_graph();

	$("input[type=range]").on('input', function () {
		var a = parseFloat($('#temp').text())
		var b = parseFloat(this.value)
		// console.log(a)
		var val = 255 - 10 * (Math.abs(a - b))
		// console.log(val)
		if (b > a) {
			$('#circle-xs, #circle').css("border-color", "rgb(" + val + ", 0, 0)")
		}
		else if (b < a) {
			$('#circle-xs, #circle').css("border-color", "rgb(0,0," + val + ")")
		}
		else {
			$('#circle-xs, #circle').css("border-color", "rgb(0, 156, 181)")
		}

		$('#newTargetTemp, #targetTemp-pitft').text(this.value);
	})

	$("input[type=range]").on('change', function () {
		console.log(this.value);
		tempC = this.value;
		$("input:radio").prop('checked', false);
		$("input:radio").closest("label").removeClass("active");
		$("#overrideTarget").text(this.value);
		$("#overrideModal").modal({
			keyboard:false,
			backdrop:false
		});
	})
	
	<%if(sinric==="enabled"){%>
		checkSinricServerStatus()
	<%}%>
	
	<%if(overrideSchedule){%>
		checkOverride()
	<%}%>

	$("input[name='overrideOptions']").on('change', function(){
		console.log('override option: ' + this.value)
		<% if(state.err==''){%> // we are in a valid time window
			var sTarget = <%=time_window_data[0].temp%>
		<%} else {%>
			var sTarget = $('#temp>div>span').text() //when in no time window use the current temperature...
		<%}%>
		var oTarget = $("#overrideTarget").text();
		console.log('scheduled target: '+ sTarget)
		console.log('overrided target: '+ oTarget)
		var CancelbtnHtml = "<p id='info'><button type='button' class='btn btn-sm btn-default' onClick=" + '"overrideTemp(' + sTarget + ",'cancel')"+'">Cancel override</button></p>'
		$('#newTargetTemp, #targetTemp-pitft').text(oTarget)
		$('#circle-xs, #circle').css("border-color", "rgb(0, 156, 181)")
		$("#overrideModal").modal('hide');
		$('#override-pitft').removeClass('hidden')
		overrideTemp(oTarget, this.value)
		$("#info").replaceWith(CancelbtnHtml)
	})

	$("#cancelOverride").click(function(){
		console.log("canceled")
		<% if(state.err==''){%> // we are in a valid time window
			var sTarget = <%=time_window_data[0].temp%>
			$('#range').val(sTarget)
		<%} else {%>
			var sTarget = '-' //when in no time window use the current temperature for a start...
			var rv=$('#temp>div>span').text()
			$('#range').val(rv)
		<%}%>
		$('#circle-xs, #circle').css("border-color", "rgb(0, 156, 181)")
		$('#newTargetTemp, #targetTemp-pitft').text(sTarget)
		$('#override-pitft').addClass('hidden')
		$("#info").replaceWith(infomsg)

	})

}); //end of $(document).ready

	<% if (state.err == "") {%>
		<% if (status == "Working") {%>
			setHomeAwayBtnsStyle("Home")
			<% } else if (status == "Paused") {%>
				setHomeAwayBtnsStyle("Home")
				<% } else if (status == "Away") {%>
					setHomeAwayBtnsStyle("Away")
					<%}; %>
	<%}; %>


		function getCurTime() {
			var d = new Date();
			var n = d.getDay();
			var h = d.getHours();
			var m = d.getMinutes();
			if (h < 10) h = "0" + h;
			if (m < 10) m = "0" + m;
			var curtime = h + ":" + m;
			return { time: curtime, day: n };
		}

	function checkTimeWindow() {
		var cur = getCurTime();
		if (<%= (state.err === "") %>) //true if there is no error so we are in a time window...
		{
			if (!(cur.time >= '<%if (typeof time_window_data[0]!=="undefined"){%><%=time_window_data[0].on_time%><%};%>' && cur.time < '<%if (typeof time_window_data[0]!=="undefined"){%><%=time_window_data[0].off_time%><%};%>')) {
				//we just went off the time window so we refresh to get new data
				//console.log('refresh');
				location.reload(true);
			}
		}
		else if (<%= (state.err === "No_time_window") %>) //true if we are not in a time window...
		{
			console.log("Not in a time window...");
			if (<%= (Object.keys(time_window_next).length !== 0) %>) //true if there is a following time window...
			{
				console.log("There is a following time window. Waiting...");
				//when we get in this following time window we refresh to update our data...
				if (cur.time >= '<%if (Object.keys(time_window_next).length!==0)%><%=time_window_next.on_time%>' && cur.time < '<%if (Object.keys(time_window_next).length!==0)%><%=time_window_next.off_time%>') {
					location.reload(true);
					//console.log('refresh on new time window!!!');
				}
				console.log("Or maybe the next day comes first!");
				// console.log(cur.day, curday);
				if (cur.day > curday) {
					//console.log("refresh on new day!!!");
					location.reload(true);
				}
			}
			else //there is not a time window neither a following one so we refresh for new data on the next day!!!
			{
				console.log("There isn't a time window following. Will refresh on next day! Waiting...");
				if (cur.day > curday) {
					//console.log("refresh on new day!!!");
					location.reload(true);
				}
			}
		}
		else //there is an Overlap!!!
		{
			console.log("Do nothing - wait for the user to fix the overlap!!!");
		}
	}

	/*
		//Some calculations about the y-axis scale I should use:
	
	*/
	var ctx = $("#MyChart").get(0).getContext("2d");

	//Update graph selections
	$('#graph_sensor').change(function () {
		myChart.destroy();
		update_graph()
	});

	$('#graph_duration').change(function () {
		if ($(this).val() !== '1') { //if not LIVE the user can choose the sensor
			$('#graph_sensor').prop("disabled", false);
		} else {
			//if LIVE the sensor defaults to the one used!
			$('#graph_sensor').val("<%=sensors%>").trigger('change.select2');
			$('#graph_sensor').prop("disabled", true);
		}
		myChart.destroy();
		update_graph();
	});

	$('#graph_refresh').click(function () {
		myChart.destroy();
		update_graph()
	});



	function update_graph() {
		var duration = $('#graph_duration').val();
		var sensor = $('#graph_sensor').val();
		$.ajax({
			type: "POST",
			contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
			url: "/pyre/update_graph",
			data: JSON.stringify({ sensor: sensor, duration: duration }),
			success: function (rdata) {
				if (rdata.result === "success") {
					var data = rdata.graph_data;
					var newtemp_range = Math.max.apply(null, data.temps) - Math.min.apply(null, data.temps);
					if (newtemp_range < 1) {
						var newscaleStep = 0.2;
						var newscaleStart = Math.min.apply(null, data.temps) - 1;
						var newscaleEnd = Math.max.apply(null, data.temps) + 1;
					} else if (newtemp_range < 3) {
						var newscaleStep = 0.5;
						var newscaleStart = Math.min.apply(null, data.temps) - 1;
						var newscaleEnd = Math.max.apply(null, data.temps) + 1;
					} else if (newtemp_range < 5)	{
						var newscaleStep = 1;
						var newscaleStart = Math.min.apply(null, data.temps) - 2
						var newscaleEnd = Math.max.apply(null, data.temps) + 2;
					} else {
						var newscaleStep = 2;
						var newscaleStart = Math.min.apply(null, data.temps) - 4
						var newscaleEnd = Math.max.apply(null, data.temps) + 4;
					}
					var newdata = {
						labels: data.labels,
						datasets: [
							{
								backgroundColor: "rgba(0,31,92,0.2)",
								borderColor: "rgba(220,220,220,1)",
								data: data.temps
							}
						]
					}
					var options = {
						legend: { display: false },
						title: { display: false },
						maintainAspectRatio: false,
						responsive: true,
						scaleShowGridLines: false,
						pointDotRadius: 3,
						pointHitDetectionRadius: 5,
						scales: {
							yAxes: [{ ticks: 
								{
								 fontSize: 12, 
								 fontFamily: "LatoWeb",
								 suggestedMin:newscaleStart,
								 suggestedMax:newscaleEnd,
								 stepSize: newscaleStep
								}
								 }],
							xAxes: [{ ticks: { fontSize: 12, fontFamily: "LatoWeb" } }]
						}
					}

					myChart = new Chart(ctx, {
						type: 'line',
						data: newdata,
						options: options,
						defaults: {
							global: {
								defaultFontFamily: "LatoWeb",
								defaultFontSize: 18
							}
						}
					});
				}
			},
			dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
		});
	}


	function update_live_graph(temp) {

		var min_y = myChart.options.scales.yAxes[0].ticks.suggestedMin;
		var max_y = myChart.options.scales.yAxes[0].ticks.suggestedMax;
		if (temp <= min_y || temp >= max_y) {
			console.log("live data are out of the y axis range so we trigger a graph update!");
			myChart.update();
			update_graph();
		}
		else {
			var label = getCurTime().time;
			//remove datapoints only if there are more than 24 of them esle just add
			if (myChart.data.datasets[0].data.length > 24) {
				myChart.data.datasets[0].data.shift();
				myChart.data.labels.shift();
			}
			myChart.data.datasets[0].data.push(temp);
			myChart.data.labels.push(label);
			myChart.update();
		}
	}


	function openPage(page) {
		if (page === 'config') {
			createCookie('backUrl', window.location.href);
			var setUrl = "/edit/mode";
		}
		if (page === 'about') {
			createCookie('backUrl', window.location.href);
			var setUrl = "/about";
		}
		else if (page === 'settings') {
			createCookie('backUrl', window.location.href);
			var setUrl = "/config/settings";
		}
		else { //the target URL is passed as 'page'
			createCookie('backUrl', window.location.href);
			var setUrl = page;
		}
		window.location.href = setUrl;
	}


	function overrideTemp(overrideTemp,overrideOption) {
		if (overrideOption=='cancel'){
			<%if(state.err==''){%>
				var sTarget = <%=time_window_data[0].temp%>
				$('#range').val(sTarget)
			<%} else {%>
				var sTarget = '-';
				var rv=$('#temp>div>span').text()
				$('#range').val(rv)
			<%}%>
			$('#circle-xs, #circle').css("border-color", "rgb(0, 156, 181)")
			$('#newTargetTemp, #targetTemp-pitft').text(sTarget)
			$("#info").replaceWith(infomsg)
			$('#override-pitft').addClass('hidden')
			overrideInfo = "";
		}
		$.ajax({
			type: "POST",
			contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
			url: "/pyre/override_temp",
			data: JSON.stringify({overrideTemp: overrideTemp, overrideOption: overrideOption }),
			success: function (rdata) { //rdata = remote data that the server sends as feedback...
				// console.log(rdata.result);
				if (rdata.result === "ok") {
					console.log("success");
				}
				else {
					console.log('error');
				}
			},
			dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
		});
	}

	function toggleAway() {
		$.ajax({
			type: "POST",
			contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
			url: "/pyre/away",
			success: function (rdata) { //rdata = remote data that the server sends as feedback...
				if (rdata.result === "ok") {
					console.log("success")
				}
				else {
					console.log('error');
				}
			},
			dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
		})
	}

	function checkSinricServerStatus() {
		$.ajax({
			type: "POST",
			contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
			url: "/pyre/checkSinric",
			//no need to return data as we trigger a heartbeat that will emit back the result via socket.io 
			success: function (rdata) { //rdata = remote data that the server sends as feedback...
					// console.log(rdata.result);
					if (rdata.result === "ok") {
						console.log("success");
					}
					else {
						console.log('error');
					}
				},
				dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
		})
	}
	
	function checkOverride() {
		$.ajax({
			type: "POST",
			contentType: "application/json; charset=utf-8", //contentType is the type of data you're sending
			url: "/pyre/checkOverride",
			//no need to return data as we trigger a heartbeat that will emit back the result via socket.io 
			success: function (rdata) { //rdata = remote data that the server sends as feedback...
					console.log(rdata);
					if (rdata.result === "ok") {
						console.log("success")
						console.log(rdata)
						handleStateUpdate(rdata)
					}
				},
			dataType: "json" // dataType is what you're expecting back from the server: json, html, text,
		})
	}


	function setHomeAwayBtnsStyle(location) {
		if (location === "Home") {
			$("#setHome").attr("disabled", true);
			$('#setHome').addClass('disabled');
			$("#setHome").css("background", "white");
			$("#setHome").css("color", "black");

			$("#setAway").attr("disabled", false);
			$('#setAway').removeClass('disabled');
			$("#setAway").css("background", "none");
			$("#setAway").css("color", "white");
		}
		else {
			$("#setHome").attr("disabled", false);
			$('#setHome').removeClass('disabled');
			$("#setHome").css("background", "none");
			$("#setHome").css("color", "white");

			$("#setAway").attr("disabled", true);
			$('#setAway').addClass('disabled');
			$("#setAway").css("background", "white");
			$("#setAway").css("color", "black");
		}
	}

	function showInfoModal(){
		var info = $('#info-pitft').text();
		if (overrideInfo!=""){
			$('#infoModal .modal-body > p').text(overrideInfo);
		}
		else {
			$('#infoModal .modal-body > p').text(info);
		}
		$('#infoModal').modal();
	}

	function handleStateUpdate(data){
		if (data.curstate === "Paused") {
			$("#status-pitft").removeClass("working default away paused");
			$("#status-pitft").addClass("paused");
			$("#status>span").removeClass("default working paused away");
			$("#status>span").addClass("paused");
			setHomeAwayBtnsStyle("Home")
			$('#awayOrNot-pitft').removeClass('fa-home, fa-road');
			$('#awayOrNot-pitft').addClass('fa-home');
		}
		else if (data.curstate === "Working") {
			$("#status-pitft").removeClass("working default away paused");
			$("#status-pitft").addClass("working");
			$("#status>span").removeClass("default working paused away");
			$("#status>span").addClass("working");
			setHomeAwayBtnsStyle("Home")
			$('#awayOrNot-pitft').removeClass('fa-home, fa-road');
			$('#awayOrNot-pitft').addClass('fa-home');
		}
		else if (data.curstate === "Away") {
			$("#status-pitft").removeClass("working default away paused");
			$("#status-pitft").addClass("away");
			$("#status>span").removeClass("default working paused away");
			$("#status>span").addClass("away");
			setHomeAwayBtnsStyle("Away")
			$('#awayOrNot-pitft').removeClass('fa-home, fa-road');
			$('#awayOrNot-pitft').addClass('fa-road');
		}
		
		if (data.override){
			<%if(state.err==''){%>
				var sTarget = <%=time_window_data[0].temp%>
			<%} else {%>
				var sTarget = null
			<%}%>
			var CancelbtnHtml = "<p id='info'><button type='button' class='btn btn-sm btn-default' onClick=" + '"overrideTemp(' + sTarget + ",'cancel')"+'">Cancel override</button></p>'
			$("#info").replaceWith(CancelbtnHtml)
			$('#override-pitft').removeClass('hidden')
			$('#newTargetTemp, #targetTemp-pitft').text(data.overrideTarget)
			overrideInfo = 'The setpoint is currently overrided until ' + data.overrideEndTime;
			$('#override').text(overrideInfo)
		} else {
			overrideInfo = "";
			$('#override').text("")
			<%if(state.err==''){%>
				var sTarget = <%=time_window_data[0].temp%>
				$('#range').val(sTarget)
			<%} else {%>
				var sTarget = '-'
				var rv=$('#temp>div>span').text()
				$('#range').val(rv)
			<%}%>
			$('#circle-xs, #circle').css("border-color", "rgb(0, 156, 181)")
			$('#newTargetTemp, #targetTemp-pitft').text(sTarget)
			$("#info").replaceWith(infomsg)
			$('#override-pitft').addClass('hidden')
		}
	}

		function get_current_grid_option() { return $('.device-check:visible').attr('data-device') }

/*
* When in xs grid the chart is hidden and is not get updated with new temp data
* If the grid size changes and the chart become visible we refresh it to get the latest data!
*/
$(window).resize(function(){
	grid = get_current_grid_option();
	if (grid=='xs'){
		gridPrev=grid;
	} else {
		if (gridPrev == 'xs'){
			myChart.destroy();
			update_graph();
			gridPrev=grid;
		}
	}
})

</script>